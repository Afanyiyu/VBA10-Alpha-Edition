//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#include "pch.h"
#include "XamlTypeInfo.g.h"

#include "BlankPage.xaml.h"
#include "CheatPane.xaml.h"
#include "ExportPage.xaml.h"
#include "FileBrowserPane.xaml.h"
#include "HelpPage.xaml.h"
#include "App.xaml.h"
#include "HIDGamepadConfig.xaml.h"
#include "ImportPage.xaml.h"
#include "SelectFilePane.xaml.h"
#include "SelectFilesPane.xaml.h"
#include "SelectROMPane.xaml.h"
#include "SelectStatePane.xaml.h"
#include "SettingsPage.xaml.h"
#include "DirectXPage.xaml.h"
#include "XboxConfigPage.xaml.h"
#include "XamlBindingInfo.g.hpp"
#include "BlankPage.g.hpp"
#include "CheatPane.g.hpp"
#include "ExportPage.g.hpp"
#include "FileBrowserPane.g.hpp"
#include "HelpPage.g.hpp"
#include "App.g.hpp"
#include "HIDGamepadConfig.g.hpp"
#include "ImportPage.g.hpp"
#include "SelectFilePane.g.hpp"
#include "SelectFilesPane.g.hpp"
#include "SelectROMPane.g.hpp"
#include "SelectStatePane.g.hpp"
#include "SettingsPage.g.hpp"
#include "DirectXPage.g.hpp"
#include "XboxConfigPage.g.hpp"

template<typename T>
::Platform::Object^ ActivateType()
{
    return ref new T;
}

template<typename TInstance, typename TItem>
void CollectionAdd(::Platform::Object^ instance, ::Platform::Object^ item)
{
    safe_cast<TInstance^>(instance)->Append((TItem)item);
}

template<typename TInstance, typename TKey, typename TItem>
void DictionaryAdd(::Platform::Object^ instance, ::Platform::Object^ key, ::Platform::Object^ item)
{
    safe_cast<TInstance^>(instance)->Insert((TKey)key, (TItem)item);
}

template<typename T>
::Platform::Object^ FromStringConverter(::XamlTypeInfo::InfoProvider::XamlUserType^ userType, ::Platform::String^ input)
{
    return ref new ::Platform::Box<T>((T)userType->CreateEnumUIntFromString(input));
}

template<typename TDeclaringType, typename TValue>
::Platform::Object^ GetValueTypeMember_Cancelled(::Platform::Object^ instance)
{
    return ref new ::Platform::Box<TValue>(safe_cast<TDeclaringType^>(instance)->Cancelled);
}

template<typename TDeclaringType, typename TValue>
::Platform::Object^ GetValueTypeMember_Enabled(::Platform::Object^ instance)
{
    return ref new ::Platform::Box<TValue>(safe_cast<TDeclaringType^>(instance)->Enabled);
}

template<typename TDeclaringType, typename TValue>
::Platform::Object^ GetValueTypeMember_AutoLoadLastState(::Platform::Object^ instance)
{
    return ref new ::Platform::Box<TValue>(safe_cast<TDeclaringType^>(instance)->AutoLoadLastState);
}

template<typename TDeclaringType, typename TValue>
::Platform::Object^ GetValueTypeMember_AutoSaveIndex(::Platform::Object^ instance)
{
    return ref new ::Platform::Box<TValue>(safe_cast<TDeclaringType^>(instance)->AutoSaveIndex);
}

template<typename TDeclaringType, typename TValue>
::Platform::Object^ GetValueTypeMember_LastSaveIndex(::Platform::Object^ instance)
{
    return ref new ::Platform::Box<TValue>(safe_cast<TDeclaringType^>(instance)->LastSaveIndex);
}

template<typename TDeclaringType, typename TValue>
::Platform::Object^ GetValueTypeMember_LastPlayed(::Platform::Object^ instance)
{
    return ref new ::Platform::Box<TValue>(safe_cast<TDeclaringType^>(instance)->LastPlayed);
}

template<typename TDeclaringType, typename TValue>
::Platform::Object^ GetValueTypeMember_LocationType(::Platform::Object^ instance)
{
    return ref new ::Platform::Box<TValue>(safe_cast<TDeclaringType^>(instance)->LocationType);
}

template<typename TDeclaringType, typename TValue>
::Platform::Object^ GetValueTypeMember_FolderChildrenCount(::Platform::Object^ instance)
{
    return ref new ::Platform::Box<TValue>(safe_cast<TDeclaringType^>(instance)->FolderChildrenCount);
}

template<typename TDeclaringType, typename TValue>
::Platform::Object^ GetValueTypeMember_Downloading(::Platform::Object^ instance)
{
    return ref new ::Platform::Box<TValue>(safe_cast<TDeclaringType^>(instance)->Downloading);
}

template<typename TDeclaringType, typename TValue>
::Platform::Object^ GetValueTypeMember_Type(::Platform::Object^ instance)
{
    return ref new ::Platform::Box<TValue>(safe_cast<TDeclaringType^>(instance)->Type);
}

template<typename TDeclaringType>
::Platform::Object^ GetReferenceTypeMember_AppFrame(::Platform::Object^ instance)
{
    return safe_cast<TDeclaringType^>(instance)->AppFrame;
}

template<typename TDeclaringType>
::Platform::Object^ GetReferenceTypeMember_FileSelectedCallback(::Platform::Object^ instance)
{
    return safe_cast<TDeclaringType^>(instance)->FileSelectedCallback;
}

template<typename TDeclaringType>
::Platform::Object^ GetReferenceTypeMember_FilesSelectedCallback(::Platform::Object^ instance)
{
    return safe_cast<TDeclaringType^>(instance)->FilesSelectedCallback;
}

template<typename TDeclaringType>
::Platform::Object^ GetReferenceTypeMember_Description(::Platform::Object^ instance)
{
    return safe_cast<TDeclaringType^>(instance)->Description;
}

template<typename TDeclaringType>
::Platform::Object^ GetReferenceTypeMember_CheatCode(::Platform::Object^ instance)
{
    return safe_cast<TDeclaringType^>(instance)->CheatCode;
}

template<typename TDeclaringType>
::Platform::Object^ GetReferenceTypeMember_Snapshot(::Platform::Object^ instance)
{
    return safe_cast<TDeclaringType^>(instance)->Snapshot;
}

template<typename TDeclaringType>
::Platform::Object^ GetReferenceTypeMember_File(::Platform::Object^ instance)
{
    return safe_cast<TDeclaringType^>(instance)->File;
}

template<typename TDeclaringType>
::Platform::Object^ GetReferenceTypeMember_Folder(::Platform::Object^ instance)
{
    return safe_cast<TDeclaringType^>(instance)->Folder;
}

template<typename TDeclaringType>
::Platform::Object^ GetReferenceTypeMember_SnapshotUri(::Platform::Object^ instance)
{
    return safe_cast<TDeclaringType^>(instance)->SnapshotUri;
}

template<typename TDeclaringType>
::Platform::Object^ GetReferenceTypeMember_Token(::Platform::Object^ instance)
{
    return safe_cast<TDeclaringType^>(instance)->Token;
}

template<typename TDeclaringType>
::Platform::Object^ GetReferenceTypeMember_FolderPath(::Platform::Object^ instance)
{
    return safe_cast<TDeclaringType^>(instance)->FolderPath;
}

template<typename TDeclaringType>
::Platform::Object^ GetReferenceTypeMember_FileName(::Platform::Object^ instance)
{
    return safe_cast<TDeclaringType^>(instance)->FileName;
}

template<typename TDeclaringType>
::Platform::Object^ GetReferenceTypeMember_DisplayName(::Platform::Object^ instance)
{
    return safe_cast<TDeclaringType^>(instance)->DisplayName;
}

template<typename TDeclaringType>
::Platform::Object^ GetReferenceTypeMember_Path(::Platform::Object^ instance)
{
    return safe_cast<TDeclaringType^>(instance)->Path;
}

template<typename TDeclaringType>
::Platform::Object^ GetReferenceTypeMember_Name(::Platform::Object^ instance)
{
    return safe_cast<TDeclaringType^>(instance)->Name;
}

template<typename TDeclaringType>
::Platform::Object^ GetReferenceTypeMember_OneDriveLink(::Platform::Object^ instance)
{
    return safe_cast<TDeclaringType^>(instance)->OneDriveLink;
}

template<typename TDeclaringType>
::Platform::Object^ GetReferenceTypeMember_ParentID(::Platform::Object^ instance)
{
    return safe_cast<TDeclaringType^>(instance)->ParentID;
}

template<typename TDeclaringType>
::Platform::Object^ GetReferenceTypeMember_OneDriveID(::Platform::Object^ instance)
{
    return safe_cast<TDeclaringType^>(instance)->OneDriveID;
}

template<typename TDeclaringType, typename TValue>
void SetEnumMember_Type(::Platform::Object^ instance, ::Platform::Object^ value)
{
    safe_cast<TDeclaringType^>(instance)->Type = safe_cast<::Platform::IBox<TValue>^>(value)->Value;
}

template<typename TDeclaringType, typename TValue>
void SetValueTypeMember_Cancelled(::Platform::Object^ instance, ::Platform::Object^ value)
{
    safe_cast<TDeclaringType^>(instance)->Cancelled = safe_cast<::Platform::IBox<TValue>^>(value)->Value;
}

template<typename TDeclaringType, typename TValue>
void SetValueTypeMember_Enabled(::Platform::Object^ instance, ::Platform::Object^ value)
{
    safe_cast<TDeclaringType^>(instance)->Enabled = safe_cast<::Platform::IBox<TValue>^>(value)->Value;
}

template<typename TDeclaringType, typename TValue>
void SetValueTypeMember_AutoLoadLastState(::Platform::Object^ instance, ::Platform::Object^ value)
{
    safe_cast<TDeclaringType^>(instance)->AutoLoadLastState = safe_cast<::Platform::IBox<TValue>^>(value)->Value;
}

template<typename TDeclaringType, typename TValue>
void SetValueTypeMember_AutoSaveIndex(::Platform::Object^ instance, ::Platform::Object^ value)
{
    safe_cast<TDeclaringType^>(instance)->AutoSaveIndex = safe_cast<::Platform::IBox<TValue>^>(value)->Value;
}

template<typename TDeclaringType, typename TValue>
void SetValueTypeMember_LastSaveIndex(::Platform::Object^ instance, ::Platform::Object^ value)
{
    safe_cast<TDeclaringType^>(instance)->LastSaveIndex = safe_cast<::Platform::IBox<TValue>^>(value)->Value;
}

template<typename TDeclaringType, typename TValue>
void SetValueTypeMember_LastPlayed(::Platform::Object^ instance, ::Platform::Object^ value)
{
    safe_cast<TDeclaringType^>(instance)->LastPlayed = safe_cast<::Platform::IBox<TValue>^>(value)->Value;
}

template<typename TDeclaringType, typename TValue>
void SetValueTypeMember_LocationType(::Platform::Object^ instance, ::Platform::Object^ value)
{
    safe_cast<TDeclaringType^>(instance)->LocationType = safe_cast<::Platform::IBox<TValue>^>(value)->Value;
}

template<typename TDeclaringType, typename TValue>
void SetValueTypeMember_FolderChildrenCount(::Platform::Object^ instance, ::Platform::Object^ value)
{
    safe_cast<TDeclaringType^>(instance)->FolderChildrenCount = safe_cast<::Platform::IBox<TValue>^>(value)->Value;
}

template<typename TDeclaringType, typename TValue>
void SetValueTypeMember_Downloading(::Platform::Object^ instance, ::Platform::Object^ value)
{
    safe_cast<TDeclaringType^>(instance)->Downloading = safe_cast<::Platform::IBox<TValue>^>(value)->Value;
}

template<typename TDeclaringType, typename TValue>
void SetReferenceTypeMember_FileSelectedCallback(::Platform::Object^ instance, ::Platform::Object^ value)
{
    safe_cast<TDeclaringType^>(instance)->FileSelectedCallback = safe_cast<TValue^>(value);
}

template<typename TDeclaringType, typename TValue>
void SetReferenceTypeMember_FilesSelectedCallback(::Platform::Object^ instance, ::Platform::Object^ value)
{
    safe_cast<TDeclaringType^>(instance)->FilesSelectedCallback = safe_cast<TValue^>(value);
}

template<typename TDeclaringType, typename TValue>
void SetReferenceTypeMember_Description(::Platform::Object^ instance, ::Platform::Object^ value)
{
    safe_cast<TDeclaringType^>(instance)->Description = safe_cast<TValue^>(value);
}

template<typename TDeclaringType, typename TValue>
void SetReferenceTypeMember_CheatCode(::Platform::Object^ instance, ::Platform::Object^ value)
{
    safe_cast<TDeclaringType^>(instance)->CheatCode = safe_cast<TValue^>(value);
}

template<typename TDeclaringType, typename TValue>
void SetReferenceTypeMember_Snapshot(::Platform::Object^ instance, ::Platform::Object^ value)
{
    safe_cast<TDeclaringType^>(instance)->Snapshot = safe_cast<TValue^>(value);
}

template<typename TDeclaringType, typename TValue>
void SetReferenceTypeMember_File(::Platform::Object^ instance, ::Platform::Object^ value)
{
    safe_cast<TDeclaringType^>(instance)->File = safe_cast<TValue^>(value);
}

template<typename TDeclaringType, typename TValue>
void SetReferenceTypeMember_Folder(::Platform::Object^ instance, ::Platform::Object^ value)
{
    safe_cast<TDeclaringType^>(instance)->Folder = safe_cast<TValue^>(value);
}

template<typename TDeclaringType, typename TValue>
void SetReferenceTypeMember_SnapshotUri(::Platform::Object^ instance, ::Platform::Object^ value)
{
    safe_cast<TDeclaringType^>(instance)->SnapshotUri = safe_cast<TValue^>(value);
}

template<typename TDeclaringType, typename TValue>
void SetReferenceTypeMember_Token(::Platform::Object^ instance, ::Platform::Object^ value)
{
    safe_cast<TDeclaringType^>(instance)->Token = safe_cast<TValue^>(value);
}

template<typename TDeclaringType, typename TValue>
void SetReferenceTypeMember_FolderPath(::Platform::Object^ instance, ::Platform::Object^ value)
{
    safe_cast<TDeclaringType^>(instance)->FolderPath = safe_cast<TValue^>(value);
}

template<typename TDeclaringType, typename TValue>
void SetReferenceTypeMember_FileName(::Platform::Object^ instance, ::Platform::Object^ value)
{
    safe_cast<TDeclaringType^>(instance)->FileName = safe_cast<TValue^>(value);
}

template<typename TDeclaringType, typename TValue>
void SetReferenceTypeMember_DisplayName(::Platform::Object^ instance, ::Platform::Object^ value)
{
    safe_cast<TDeclaringType^>(instance)->DisplayName = safe_cast<TValue^>(value);
}

template<typename TDeclaringType, typename TValue>
void SetReferenceTypeMember_OneDriveLink(::Platform::Object^ instance, ::Platform::Object^ value)
{
    safe_cast<TDeclaringType^>(instance)->OneDriveLink = safe_cast<TValue^>(value);
}

template<typename TDeclaringType, typename TValue>
void SetReferenceTypeMember_ParentID(::Platform::Object^ instance, ::Platform::Object^ value)
{
    safe_cast<TDeclaringType^>(instance)->ParentID = safe_cast<TValue^>(value);
}

template<typename TDeclaringType, typename TValue>
void SetReferenceTypeMember_OneDriveID(::Platform::Object^ instance, ::Platform::Object^ value)
{
    safe_cast<TDeclaringType^>(instance)->OneDriveID = safe_cast<TValue^>(value);
}

template<typename TDeclaringType, typename TValue>
void SetReferenceTypeMember_Name(::Platform::Object^ instance, ::Platform::Object^ value)
{
    safe_cast<TDeclaringType^>(instance)->Name = safe_cast<TValue^>(value);
}

struct TypeInfo
{
    PCWSTR  typeName;
    PCWSTR contentPropertyName;
    ::Platform::Object^ (*activator)();
    void (*collectionAdd)(::Platform::Object^, ::Platform::Object^);
    void (*dictionaryAdd)(::Platform::Object^, ::Platform::Object^, ::Platform::Object^);
    ::Platform::Object^ (*fromStringConverter)(::XamlTypeInfo::InfoProvider::XamlUserType^, ::Platform::String^);
    int     baseTypeIndex;
    int     firstMemberIndex;
    int     firstEnumValueIndex;
    ::Windows::UI::Xaml::Interop::TypeKind kindofType;
    bool    isLocalType;
    bool    isSystemType;
    bool    isReturnTypeStub;
    bool    isBindable;
};

TypeInfo TypeInfos[] = 
{
    //   0
    L"Int32", L"",
    nullptr, nullptr, nullptr, nullptr,
    -1,
    0, 0, ::Windows::UI::Xaml::Interop::TypeKind::Metadata,
    false, true,  false, false,
    //   1
    L"Object", L"",
    nullptr, nullptr, nullptr, nullptr,
    -1,
    0, 0, ::Windows::UI::Xaml::Interop::TypeKind::Metadata,
    false, true,  false, false,
    //   2
    L"String", L"",
    nullptr, nullptr, nullptr, nullptr,
    -1,
    0, 0, ::Windows::UI::Xaml::Interop::TypeKind::Metadata,
    false, true,  false, false,
    //   3
    L"Boolean", L"",
    nullptr, nullptr, nullptr, nullptr,
    -1,
    0, 0, ::Windows::UI::Xaml::Interop::TypeKind::Metadata,
    false, true,  false, false,
    //   4
    L"System.Enum", L"",
    nullptr, nullptr, nullptr, nullptr,
    11, // System.ValueType
    0, 0, ::Windows::UI::Xaml::Interop::TypeKind::Metadata,
    false, false, false, false,
    //   5
    L"VBA10.HelpPage", L"",
    &ActivateType<::VBA10::HelpPage>, nullptr, nullptr, nullptr,
    34, // Windows.UI.Xaml.Controls.Page
    0, 0, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    true,  false, false, false,
    //   6
    L"VBA10.BlankPage", L"",
    &ActivateType<::VBA10::BlankPage>, nullptr, nullptr, nullptr,
    34, // Windows.UI.Xaml.Controls.Page
    0, 0, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    true,  false, false, false,
    //   7
    L"VBA10.CheatPane", L"",
    &ActivateType<::VBA10::CheatPane>, nullptr, nullptr, nullptr,
    34, // Windows.UI.Xaml.Controls.Page
    0, 0, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    true,  false, false, false,
    //   8
    L"System.Delegate", L"",
    nullptr, nullptr, nullptr, nullptr,
    1, // Object
    1, 0, ::Windows::UI::Xaml::Interop::TypeKind::Metadata,
    false, false, false, false,
    //   9
    L"VBA10.CheatData", L"",
    &ActivateType<::VBA10::CheatData>, nullptr, nullptr, nullptr,
    1, // Object
    1, 0, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    true,  false, false, true, 
    //  10
    L"Windows.UI.Color", L"",
    nullptr, nullptr, nullptr, nullptr,
    11, // System.ValueType
    4, 0, ::Windows::UI::Xaml::Interop::TypeKind::Metadata,
    false, false, false, false,
    //  11
    L"System.ValueType", L"",
    nullptr, nullptr, nullptr, nullptr,
    1, // Object
    4, 0, ::Windows::UI::Xaml::Interop::TypeKind::Metadata,
    false, false, false, false,
    //  12
    L"VBA10.ExportPage", L"",
    &ActivateType<::VBA10::ExportPage>, nullptr, nullptr, nullptr,
    34, // Windows.UI.Xaml.Controls.Page
    4, 0, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    true,  false, false, false,
    //  13
    L"VBA10.ImportPage", L"",
    &ActivateType<::VBA10::ImportPage>, nullptr, nullptr, nullptr,
    34, // Windows.UI.Xaml.Controls.Page
    4, 0, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    true,  false, false, false,
    //  14
    L"VBA10.ROMDBEntry", L"",
    nullptr, nullptr, nullptr, nullptr,
    1, // Object
    4, 0, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    true,  false, false, true, 
    //  15
    L"VBA10.DirectXPage", L"",
    &ActivateType<::VBA10::DirectXPage>, nullptr, nullptr, nullptr,
    34, // Windows.UI.Xaml.Controls.Page
    17, 0, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    true,  false, false, false,
    //  16
    L"VBA10.SettingsPage", L"",
    &ActivateType<::VBA10::SettingsPage>, nullptr, nullptr, nullptr,
    34, // Windows.UI.Xaml.Controls.Page
    18, 0, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    true,  false, false, false,
    //  17
    L"VBA10.SelectROMPane", L"",
    &ActivateType<::VBA10::SelectROMPane>, nullptr, nullptr, nullptr,
    34, // Windows.UI.Xaml.Controls.Page
    18, 0, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    true,  false, false, false,
    //  18
    L"VBA10.SelectFilePane", L"",
    nullptr, nullptr, nullptr, nullptr,
    39, // Windows.UI.Xaml.Controls.UserControl
    18, 0, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    true,  false, false, false,
    //  19
    L"VBA10.XboxConfigPage", L"",
    &ActivateType<::VBA10::XboxConfigPage>, nullptr, nullptr, nullptr,
    34, // Windows.UI.Xaml.Controls.Page
    19, 0, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    true,  false, false, false,
    //  20
    L"VBA10.FileBrowserPane", L"",
    &ActivateType<::VBA10::FileBrowserPane>, nullptr, nullptr, nullptr,
    34, // Windows.UI.Xaml.Controls.Page
    19, 0, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    true,  false, false, false,
    //  21
    L"VBA10.SelectFilesPane", L"",
    nullptr, nullptr, nullptr, nullptr,
    39, // Windows.UI.Xaml.Controls.UserControl
    19, 0, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    true,  false, false, false,
    //  22
    L"VBA10.SelectStatePane", L"",
    nullptr, nullptr, nullptr, nullptr,
    39, // Windows.UI.Xaml.Controls.UserControl
    20, 0, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    true,  false, false, false,
    //  23
    L"VBA10.HIDGamepadConfig", L"",
    &ActivateType<::VBA10::HIDGamepadConfig>, nullptr, nullptr, nullptr,
    34, // Windows.UI.Xaml.Controls.Page
    20, 0, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    true,  false, false, false,
    //  24
    L"VBA10.StorageFileModel", L"",
    nullptr, nullptr, nullptr, nullptr,
    1, // Object
    20, 0, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    true,  false, false, true, 
    //  25
    L"VBA10.OneDriveFileItem", L"",
    &ActivateType<::VBA10::OneDriveFileItem>, nullptr, nullptr, nullptr,
    1, // Object
    24, 0, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    true,  false, false, true, 
    //  26
    L"VBA10.OneDriveItemType", L"",
    nullptr, nullptr, nullptr, &FromStringConverter<::VBA10::OneDriveItemType>,
    4, // System.Enum
    32, 0, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    true,  false, false, false,
    //  27
    L"System.MulticastDelegate", L"",
    nullptr, nullptr, nullptr, nullptr,
    8, // System.Delegate
    32, 8, ::Windows::UI::Xaml::Interop::TypeKind::Metadata,
    false, false, false, false,
    //  28
    L"VBA10.StorageFolderModel", L"",
    nullptr, nullptr, nullptr, nullptr,
    1, // Object
    32, 8, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    true,  false, false, true, 
    //  29
    L"VBA10.VisibilityConverter", L"",
    &ActivateType<::VBA10::VisibilityConverter>, nullptr, nullptr, nullptr,
    1, // Object
    35, 8, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    true,  false, false, false,
    //  30
    L"VBA10.FileSelectedDelegate", L"",
    nullptr, nullptr, nullptr, nullptr,
    27, // System.MulticastDelegate
    35, 8, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    true,  false, true,  false,
    //  31
    L"VBA10.FilesSelectedDelegate", L"",
    nullptr, nullptr, nullptr, nullptr,
    27, // System.MulticastDelegate
    35, 8, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    true,  false, true,  false,
    //  32
    L"Windows.Storage.StorageFile", L"",
    nullptr, nullptr, nullptr, nullptr,
    1, // Object
    35, 8, ::Windows::UI::Xaml::Interop::TypeKind::Metadata,
    false, false, true,  false,
    //  33
    L"Windows.Foundation.DateTime", L"",
    nullptr, nullptr, nullptr, nullptr,
    11, // System.ValueType
    35, 8, ::Windows::UI::Xaml::Interop::TypeKind::Metadata,
    false, false, true,  false,
    //  34
    L"Windows.UI.Xaml.Controls.Page", L"",
    nullptr, nullptr, nullptr, nullptr,
    -1,
    35, 8, ::Windows::UI::Xaml::Interop::TypeKind::Metadata,
    false, true,  false, false,
    //  35
    L"Windows.Storage.StorageFolder", L"",
    nullptr, nullptr, nullptr, nullptr,
    1, // Object
    35, 8, ::Windows::UI::Xaml::Interop::TypeKind::Metadata,
    false, false, true,  false,
    //  36
    L"VBA10.Controls.NavMenuListView", L"",
    &ActivateType<::VBA10::Controls::NavMenuListView>, nullptr, nullptr, nullptr,
    38, // Windows.UI.Xaml.Controls.ListView
    35, 8, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    true,  false, false, false,
    //  37
    L"Windows.UI.Xaml.Controls.Frame", L"",
    nullptr, nullptr, nullptr, nullptr,
    -1,
    35, 8, ::Windows::UI::Xaml::Interop::TypeKind::Metadata,
    false, true,  false, false,
    //  38
    L"Windows.UI.Xaml.Controls.ListView", L"",
    nullptr, nullptr, nullptr, nullptr,
    -1,
    35, 8, ::Windows::UI::Xaml::Interop::TypeKind::Metadata,
    false, true,  false, false,
    //  39
    L"Windows.UI.Xaml.Controls.UserControl", L"",
    nullptr, nullptr, nullptr, nullptr,
    -1,
    35, 8, ::Windows::UI::Xaml::Interop::TypeKind::Metadata,
    false, true,  false, false,
    //  40
    L"Windows.UI.Xaml.Controls.ItemsControl", L"",
    nullptr, nullptr, nullptr, nullptr,
    -1,
    35, 8, ::Windows::UI::Xaml::Interop::TypeKind::Metadata,
    false, true,  false, false,
    //  41
    L"Windows.UI.Xaml.Media.Imaging.BitmapSource", L"",
    nullptr, nullptr, nullptr, nullptr,
    -1,
    35, 8, ::Windows::UI::Xaml::Interop::TypeKind::Metadata,
    false, true,  false, false,
    //  Last type here is for padding
    L"", L"",
    nullptr, nullptr, nullptr, nullptr,
    -1, 
    35, 8,::Windows::UI::Xaml::Interop::TypeKind::Custom,
    false, false, false, false,
};

UINT TypeInfoLookup[] = { 
      0,   //   0
      0,   //   1
      0,   //   2
      0,   //   3
      0,   //   4
      0,   //   5
      1,   //   6
      3,   //   7
      4,   //   8
      4,   //   9
      4,   //  10
      4,   //  11
      5,   //  12
      5,   //  13
      5,   //  14
      6,   //  15
     10,   //  16
     15,   //  17
     16,   //  18
     17,   //  19
     18,   //  20
     20,   //  21
     23,   //  22
     27,   //  23
     27,   //  24
     29,   //  25
     30,   //  26
     31,   //  27
     34,   //  28
     34,   //  29
     36,   //  30
     38,   //  31
     38,   //  32
     38,   //  33
     39,   //  34
     39,   //  35
     39,   //  36
     40,   //  37
     41,   //  38
     41,   //  39
     41,   //  40
     41,   //  41
     41,   //  42
     42,   //  43
};

struct EnumValueInfo
{
    PCWSTR name;
    int eValue;
};

EnumValueInfo EnumValues[] =
{ 
    L"File", (int) ::VBA10::OneDriveItemType::File,
    L"Folder", (int) ::VBA10::OneDriveItemType::Folder,
    L"ROM", (int) ::VBA10::OneDriveItemType::ROM,
    L"SRAM", (int) ::VBA10::OneDriveItemType::SRAM,
    L"Savestate", (int) ::VBA10::OneDriveItemType::Savestate,
    L"Zip", (int) ::VBA10::OneDriveItemType::Zip,
    L"Rar", (int) ::VBA10::OneDriveItemType::Rar,
    L"SevenZip", (int) ::VBA10::OneDriveItemType::SevenZip,
};

struct MemberInfo 
{
    PCWSTR shortName;
    ::Platform::Object^ (*getter)(::Platform::Object^);
    void (*setter)(::Platform::Object^, ::Platform::Object^);
    int typeIndex;
    int targetTypeIndex;
    bool isReadOnly;
    bool isDependencyProperty;
    bool isAttachable;
};

MemberInfo MemberInfos[] = 
{
    //   0 - VBA10.CheatPane.Cancelled
    L"Cancelled",
    &GetValueTypeMember_Cancelled<::VBA10::CheatPane, ::Platform::Boolean>,
    &SetValueTypeMember_Cancelled<::VBA10::CheatPane, ::Platform::Boolean>,
    3, // Boolean
    -1,
    false, false, false,
    //   1 - VBA10.CheatData.Enabled
    L"Enabled",
    &GetValueTypeMember_Enabled<::VBA10::CheatData, ::Platform::Boolean>,
    &SetValueTypeMember_Enabled<::VBA10::CheatData, ::Platform::Boolean>,
    3, // Boolean
    -1,
    false, false, false,
    //   2 - VBA10.CheatData.Description
    L"Description",
    &GetReferenceTypeMember_Description<::VBA10::CheatData>,
    &SetReferenceTypeMember_Description<::VBA10::CheatData, ::Platform::String>,
    2, // String
    -1,
    false, false, false,
    //   3 - VBA10.CheatData.CheatCode
    L"CheatCode",
    &GetReferenceTypeMember_CheatCode<::VBA10::CheatData>,
    &SetReferenceTypeMember_CheatCode<::VBA10::CheatData, ::Platform::String>,
    2, // String
    -1,
    false, false, false,
    //   4 - VBA10.ROMDBEntry.Snapshot
    L"Snapshot",
    &GetReferenceTypeMember_Snapshot<::VBA10::ROMDBEntry>,
    &SetReferenceTypeMember_Snapshot<::VBA10::ROMDBEntry, ::Windows::UI::Xaml::Media::Imaging::BitmapSource>,
    41, // Windows.UI.Xaml.Media.Imaging.BitmapSource
    -1,
    false, false, false,
    //   5 - VBA10.ROMDBEntry.AutoLoadLastState
    L"AutoLoadLastState",
    &GetValueTypeMember_AutoLoadLastState<::VBA10::ROMDBEntry, ::Platform::Boolean>,
    &SetValueTypeMember_AutoLoadLastState<::VBA10::ROMDBEntry, ::Platform::Boolean>,
    3, // Boolean
    -1,
    false, false, false,
    //   6 - VBA10.ROMDBEntry.File
    L"File",
    &GetReferenceTypeMember_File<::VBA10::ROMDBEntry>,
    &SetReferenceTypeMember_File<::VBA10::ROMDBEntry, ::Windows::Storage::StorageFile>,
    32, // Windows.Storage.StorageFile
    -1,
    false, false, false,
    //   7 - VBA10.ROMDBEntry.Folder
    L"Folder",
    &GetReferenceTypeMember_Folder<::VBA10::ROMDBEntry>,
    &SetReferenceTypeMember_Folder<::VBA10::ROMDBEntry, ::Windows::Storage::StorageFolder>,
    35, // Windows.Storage.StorageFolder
    -1,
    false, false, false,
    //   8 - VBA10.ROMDBEntry.SnapshotUri
    L"SnapshotUri",
    &GetReferenceTypeMember_SnapshotUri<::VBA10::ROMDBEntry>,
    &SetReferenceTypeMember_SnapshotUri<::VBA10::ROMDBEntry, ::Platform::String>,
    2, // String
    -1,
    false, false, false,
    //   9 - VBA10.ROMDBEntry.AutoSaveIndex
    L"AutoSaveIndex",
    &GetValueTypeMember_AutoSaveIndex<::VBA10::ROMDBEntry, ::default::int32>,
    &SetValueTypeMember_AutoSaveIndex<::VBA10::ROMDBEntry, ::default::int32>,
    0, // Int32
    -1,
    false, false, false,
    //  10 - VBA10.ROMDBEntry.LastSaveIndex
    L"LastSaveIndex",
    &GetValueTypeMember_LastSaveIndex<::VBA10::ROMDBEntry, ::default::int32>,
    &SetValueTypeMember_LastSaveIndex<::VBA10::ROMDBEntry, ::default::int32>,
    0, // Int32
    -1,
    false, false, false,
    //  11 - VBA10.ROMDBEntry.LastPlayed
    L"LastPlayed",
    &GetValueTypeMember_LastPlayed<::VBA10::ROMDBEntry, ::Windows::Foundation::DateTime>,
    &SetValueTypeMember_LastPlayed<::VBA10::ROMDBEntry, ::Windows::Foundation::DateTime>,
    33, // Windows.Foundation.DateTime
    -1,
    false, false, false,
    //  12 - VBA10.ROMDBEntry.Token
    L"Token",
    &GetReferenceTypeMember_Token<::VBA10::ROMDBEntry>,
    &SetReferenceTypeMember_Token<::VBA10::ROMDBEntry, ::Platform::String>,
    2, // String
    -1,
    false, false, false,
    //  13 - VBA10.ROMDBEntry.FolderPath
    L"FolderPath",
    &GetReferenceTypeMember_FolderPath<::VBA10::ROMDBEntry>,
    &SetReferenceTypeMember_FolderPath<::VBA10::ROMDBEntry, ::Platform::String>,
    2, // String
    -1,
    false, false, false,
    //  14 - VBA10.ROMDBEntry.FileName
    L"FileName",
    &GetReferenceTypeMember_FileName<::VBA10::ROMDBEntry>,
    &SetReferenceTypeMember_FileName<::VBA10::ROMDBEntry, ::Platform::String>,
    2, // String
    -1,
    false, false, false,
    //  15 - VBA10.ROMDBEntry.DisplayName
    L"DisplayName",
    &GetReferenceTypeMember_DisplayName<::VBA10::ROMDBEntry>,
    &SetReferenceTypeMember_DisplayName<::VBA10::ROMDBEntry, ::Platform::String>,
    2, // String
    -1,
    false, false, false,
    //  16 - VBA10.ROMDBEntry.LocationType
    L"LocationType",
    &GetValueTypeMember_LocationType<::VBA10::ROMDBEntry, ::default::int32>,
    &SetValueTypeMember_LocationType<::VBA10::ROMDBEntry, ::default::int32>,
    0, // Int32
    -1,
    false, false, false,
    //  17 - VBA10.DirectXPage.AppFrame
    L"AppFrame",
    &GetReferenceTypeMember_AppFrame<::VBA10::DirectXPage>,
    nullptr,
    37, // Windows.UI.Xaml.Controls.Frame
    -1,
    true,  false, false,
    //  18 - VBA10.SelectFilePane.FileSelectedCallback
    L"FileSelectedCallback",
    &GetReferenceTypeMember_FileSelectedCallback<::VBA10::SelectFilePane>,
    &SetReferenceTypeMember_FileSelectedCallback<::VBA10::SelectFilePane, ::VBA10::FileSelectedDelegate>,
    30, // VBA10.FileSelectedDelegate
    -1,
    false, false, false,
    //  19 - VBA10.SelectFilesPane.FilesSelectedCallback
    L"FilesSelectedCallback",
    &GetReferenceTypeMember_FilesSelectedCallback<::VBA10::SelectFilesPane>,
    &SetReferenceTypeMember_FilesSelectedCallback<::VBA10::SelectFilesPane, ::VBA10::FilesSelectedDelegate>,
    31, // VBA10.FilesSelectedDelegate
    -1,
    false, false, false,
    //  20 - VBA10.StorageFileModel.Path
    L"Path",
    &GetReferenceTypeMember_Path<::VBA10::StorageFileModel>,
    nullptr,
    2, // String
    -1,
    true,  false, false,
    //  21 - VBA10.StorageFileModel.Name
    L"Name",
    &GetReferenceTypeMember_Name<::VBA10::StorageFileModel>,
    nullptr,
    2, // String
    -1,
    true,  false, false,
    //  22 - VBA10.StorageFileModel.Folder
    L"Folder",
    &GetReferenceTypeMember_Folder<::VBA10::StorageFileModel>,
    &SetReferenceTypeMember_Folder<::VBA10::StorageFileModel, ::Windows::Storage::StorageFolder>,
    35, // Windows.Storage.StorageFolder
    -1,
    false, false, false,
    //  23 - VBA10.StorageFileModel.File
    L"File",
    &GetReferenceTypeMember_File<::VBA10::StorageFileModel>,
    &SetReferenceTypeMember_File<::VBA10::StorageFileModel, ::Windows::Storage::StorageFile>,
    32, // Windows.Storage.StorageFile
    -1,
    false, false, false,
    //  24 - VBA10.OneDriveFileItem.File
    L"File",
    &GetReferenceTypeMember_File<::VBA10::OneDriveFileItem>,
    &SetReferenceTypeMember_File<::VBA10::OneDriveFileItem, ::Windows::Storage::StorageFile>,
    32, // Windows.Storage.StorageFile
    -1,
    false, false, false,
    //  25 - VBA10.OneDriveFileItem.FolderChildrenCount
    L"FolderChildrenCount",
    &GetValueTypeMember_FolderChildrenCount<::VBA10::OneDriveFileItem, ::default::int32>,
    &SetValueTypeMember_FolderChildrenCount<::VBA10::OneDriveFileItem, ::default::int32>,
    0, // Int32
    -1,
    false, false, false,
    //  26 - VBA10.OneDriveFileItem.OneDriveLink
    L"OneDriveLink",
    &GetReferenceTypeMember_OneDriveLink<::VBA10::OneDriveFileItem>,
    &SetReferenceTypeMember_OneDriveLink<::VBA10::OneDriveFileItem, ::Platform::String>,
    2, // String
    -1,
    false, false, false,
    //  27 - VBA10.OneDriveFileItem.ParentID
    L"ParentID",
    &GetReferenceTypeMember_ParentID<::VBA10::OneDriveFileItem>,
    &SetReferenceTypeMember_ParentID<::VBA10::OneDriveFileItem, ::Platform::String>,
    2, // String
    -1,
    false, false, false,
    //  28 - VBA10.OneDriveFileItem.OneDriveID
    L"OneDriveID",
    &GetReferenceTypeMember_OneDriveID<::VBA10::OneDriveFileItem>,
    &SetReferenceTypeMember_OneDriveID<::VBA10::OneDriveFileItem, ::Platform::String>,
    2, // String
    -1,
    false, false, false,
    //  29 - VBA10.OneDriveFileItem.Downloading
    L"Downloading",
    &GetValueTypeMember_Downloading<::VBA10::OneDriveFileItem, ::Platform::Boolean>,
    &SetValueTypeMember_Downloading<::VBA10::OneDriveFileItem, ::Platform::Boolean>,
    3, // Boolean
    -1,
    false, false, false,
    //  30 - VBA10.OneDriveFileItem.Type
    L"Type",
    &GetValueTypeMember_Type<::VBA10::OneDriveFileItem, ::VBA10::OneDriveItemType>,
    &SetEnumMember_Type<::VBA10::OneDriveFileItem, ::VBA10::OneDriveItemType>,
    26, // VBA10.OneDriveItemType
    -1,
    false, false, false,
    //  31 - VBA10.OneDriveFileItem.Name
    L"Name",
    &GetReferenceTypeMember_Name<::VBA10::OneDriveFileItem>,
    &SetReferenceTypeMember_Name<::VBA10::OneDriveFileItem, ::Platform::String>,
    2, // String
    -1,
    false, false, false,
    //  32 - VBA10.StorageFolderModel.Path
    L"Path",
    &GetReferenceTypeMember_Path<::VBA10::StorageFolderModel>,
    nullptr,
    2, // String
    -1,
    true,  false, false,
    //  33 - VBA10.StorageFolderModel.Name
    L"Name",
    &GetReferenceTypeMember_Name<::VBA10::StorageFolderModel>,
    nullptr,
    2, // String
    -1,
    true,  false, false,
    //  34 - VBA10.StorageFolderModel.Folder
    L"Folder",
    &GetReferenceTypeMember_Folder<::VBA10::StorageFolderModel>,
    &SetReferenceTypeMember_Folder<::VBA10::StorageFolderModel, ::Windows::Storage::StorageFolder>,
    35, // Windows.Storage.StorageFolder
    -1,
    false, false, false,
};

PCWSTR GetShortName(PCWSTR longName)
{
    PCWSTR separator = wcsrchr(longName, '.');
    return separator != nullptr ? separator + 1: longName;
}

TypeInfo* GetTypeInfo(::Platform::String^ typeName)
{
    int typeNameLength = typeName->Length();
    if (typeNameLength < _countof(TypeInfoLookup) - 1)
    {
        for (UINT i = TypeInfoLookup[typeNameLength]; i < TypeInfoLookup[typeNameLength+1]; i++)
        {
            if (typeName == ::Platform::StringReference(TypeInfos[i].typeName))
            {
                return &TypeInfos[i];
            }
        }
    }
    return nullptr;
}

MemberInfo* GetMemberInfo(::Platform::String^ longMemberName)
{
    for (int lastDotIndex = longMemberName->Length(); lastDotIndex >= 0; lastDotIndex--)
    {
        if (longMemberName->Data()[lastDotIndex] == '.')
        {
            TypeInfo* pTypeInfo = GetTypeInfo(ref new ::Platform::String(longMemberName->Data(), lastDotIndex));
            TypeInfo* pNextTypeInfo = pTypeInfo + 1;
            if (pTypeInfo)
            {
                PCWSTR shortMemberName = GetShortName(longMemberName->Data());
                for (int i = pTypeInfo->firstMemberIndex; i < pNextTypeInfo->firstMemberIndex; i++)
                {
                    if (wcscmp(shortMemberName, MemberInfos[i].shortName) == 0)
                    {
                        return &MemberInfos[i];
                    }
                }
            }
            break;
        }
    }
    return nullptr;
}

::Platform::Collections::Vector<::Windows::UI::Xaml::Markup::IXamlMetadataProvider^>^ ::XamlTypeInfo::InfoProvider::XamlTypeInfoProvider::OtherProviders::get()
{
    if(_otherProviders == nullptr)
    {
        auto otherProviders = ref new ::Platform::Collections::Vector<::Windows::UI::Xaml::Markup::IXamlMetadataProvider^>();
        ::Windows::UI::Xaml::Markup::IXamlMetadataProvider^ provider;
        provider = ref new ::Microsoft::Advertising::MicrosoftAdvertising_XamlTypeInfo::XamlMetaDataProvider();
        otherProviders->Append(provider); 
        _otherProviders = otherProviders;
    }
    return _otherProviders;
}

::Windows::UI::Xaml::Markup::IXamlType^ ::XamlTypeInfo::InfoProvider::XamlTypeInfoProvider::CreateXamlType(::Platform::String^ typeName)
{
    TypeInfo* pTypeInfo = GetTypeInfo(typeName);
    TypeInfo* pNextTypeInfo = pTypeInfo + 1;
    if (pTypeInfo == nullptr || pNextTypeInfo == nullptr)
    {
        return nullptr;
    }
    else if (pTypeInfo->isSystemType)
    {
        return ref new ::XamlTypeInfo::InfoProvider::XamlSystemBaseType(typeName);
    }
    else
    {
        ::XamlTypeInfo::InfoProvider::XamlUserType^ userType = ref new ::XamlTypeInfo::InfoProvider::XamlUserType(
            this, 
            ::Platform::StringReference(pTypeInfo->typeName), 
            this->GetXamlTypeByName(::Platform::StringReference(pTypeInfo->baseTypeIndex >= 0 ? TypeInfos[pTypeInfo->baseTypeIndex].typeName : L"")));
        userType->KindOfType = pTypeInfo->kindofType;
        userType->Activator = pTypeInfo->activator;
        userType->CollectionAdd = pTypeInfo->collectionAdd;
        userType->DictionaryAdd = pTypeInfo->dictionaryAdd;
        userType->FromStringConverter = pTypeInfo->fromStringConverter;
        userType->ContentPropertyName = ::Platform::StringReference(pTypeInfo->contentPropertyName);
        userType->IsLocalType = pTypeInfo->isLocalType;
        userType->IsReturnTypeStub = pTypeInfo->isReturnTypeStub;
        userType->IsBindable = pTypeInfo->isBindable;
        int nextMemberIndex = pTypeInfo->firstMemberIndex;
        for (int i=pTypeInfo->firstMemberIndex; i < pNextTypeInfo->firstMemberIndex; i++)
        {
            userType->AddMemberName(::Platform::StringReference(MemberInfos[i].shortName));
            nextMemberIndex++;
        }
        for (int i = pTypeInfo->firstEnumValueIndex; i < pNextTypeInfo->firstEnumValueIndex; i++)
        {
            userType->AddEnumValue(
                ::Platform::StringReference(EnumValues[i].name),
                ::Windows::Foundation::PropertyValue::CreateInt32(EnumValues[i].eValue));
        }
        return userType;
    }
}

::Windows::UI::Xaml::Markup::IXamlMember^ ::XamlTypeInfo::InfoProvider::XamlTypeInfoProvider::CreateXamlMember(::Platform::String^ longMemberName)
{
    ::XamlTypeInfo::InfoProvider::XamlMember^ xamlMember = nullptr;
    MemberInfo* pMemberInfo = GetMemberInfo(longMemberName);
    if (pMemberInfo != nullptr)
    {
        xamlMember = ref new ::XamlTypeInfo::InfoProvider::XamlMember(
            this,
            ::Platform::StringReference(pMemberInfo->shortName),
            ::Platform::StringReference(TypeInfos[pMemberInfo->typeIndex].typeName));
        xamlMember->Getter = pMemberInfo->getter;
        xamlMember->Setter = pMemberInfo->setter;
        xamlMember->TargetTypeName = pMemberInfo->targetTypeIndex >= 0 ? ::Platform::StringReference(TypeInfos[pMemberInfo->targetTypeIndex].typeName) : L"";
        xamlMember->IsReadOnly = pMemberInfo->isReadOnly;
        xamlMember->IsDependencyProperty = pMemberInfo->isDependencyProperty;
        xamlMember->IsAttachable = pMemberInfo->isAttachable;
    }
    return xamlMember;
}

