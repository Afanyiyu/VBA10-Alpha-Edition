//------------------------------------------------------------------------------
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
//------------------------------------------------------------------------------
#include "pch.h"

#if defined _DEBUG && !defined DISABLE_XAML_GENERATED_BINDING_DEBUG_OUTPUT
extern "C" __declspec(dllimport) int __stdcall IsDebuggerPresent();
#endif

#include "DirectXPage.xaml.h"

void ::VBA10::DirectXPage::InitializeComponent()
{
    if (_contentLoaded)
    {
        return;
    }
    _contentLoaded = true;
    ::Windows::Foundation::Uri^ resourceLocator = ref new ::Windows::Foundation::Uri(L"ms-appx:///DirectXPage.xaml");
    ::Windows::UI::Xaml::Application::LoadComponent(this, resourceLocator, ::Windows::UI::Xaml::Controls::Primitives::ComponentResourceLocation::Application);
}


/// <summary>
/// Auto generated class for compiled bindings.
/// </summary>
class VBA10::DirectXPage::DirectXPage_obj2_Bindings 
    : public ::XamlBindingInfo::XamlBindingsBase<::VBA10::NavMenuItem>
{
public:
    DirectXPage_obj2_Bindings()
    {
    }

    void Connect(int __connectionId, ::Platform::Object^ __target)
    {
        switch(__connectionId)
        {
            case 3:
                this->obj3 = safe_cast<::Windows::UI::Xaml::Controls::FontIcon^>(__target);
                break;
            case 4:
                this->obj4 = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
                break;
        }
    }

    void ResetTemplate()
    {
    }

    int ProcessBindings(::Windows::UI::Xaml::Controls::ContainerContentChangingEventArgs^ args)
    {
        int nextPhase = -1;
        switch(args->Phase)
        {
            case 0:
                nextPhase = -1;
                this->SetDataRoot(static_cast<::VBA10::NavMenuItem^>(args->Item));
                if (this->_dataContextChangedToken.Value != 0)
                {
                    safe_cast<::Windows::UI::Xaml::FrameworkElement^>(args->ItemContainer->ContentTemplateRoot)->DataContextChanged -= this->_dataContextChangedToken;
                    this->_dataContextChangedToken.Value = 0;
                }
                this->_isInitialized = true;
                break;
        }
        this->Update_((::VBA10::NavMenuItem^) args->Item, (1 << args->Phase));
        return nextPhase;
    }
private:
    // Fields for each control that has bindings.
    ::Windows::UI::Xaml::Controls::FontIcon^ obj3;
    ::Windows::UI::Xaml::Controls::TextBlock^ obj4;

    // Update methods for each path node used in binding steps.
    void Update_(::VBA10::NavMenuItem^ obj, int phase)
    {
        if (obj != nullptr)
        {
            if ((phase & (NOT_PHASED | (1 << 0))) != 0)
            {
                this->Update_SymbolAsChar(obj->SymbolAsChar, phase);
                this->Update_Label(obj->Label, phase);
            }
        }
    }
    void Update_SymbolAsChar(::Platform::String^ obj, int phase)
    {
        if((phase & ((1 << 0) | NOT_PHASED )) != 0)
        {
            ::XamlBindingInfo::XamlBindingSetters::Set_Windows_UI_Xaml_Controls_FontIcon_Glyph(this->obj3, obj, nullptr);
        }
    }
    void Update_Label(::Platform::String^ obj, int phase)
    {
        if((phase & ((1 << 0) | NOT_PHASED )) != 0)
        {
            ::XamlBindingInfo::XamlBindingSetters::Set_Windows_UI_Xaml_Controls_ToolTipService_ToolTip(this->obj3, obj, nullptr);
            ::XamlBindingInfo::XamlBindingSetters::Set_Windows_UI_Xaml_Controls_TextBlock_Text(this->obj4, obj, nullptr);
        }
    }
};

void ::VBA10::DirectXPage::Connect(int __connectionId, ::Platform::Object^ __target)
{
    switch (__connectionId)
    {
        case 1:
            {
                ::Windows::UI::Xaml::Controls::Page^ element1 = safe_cast<::Windows::UI::Xaml::Controls::Page^>(__target);
                (safe_cast<::Windows::UI::Xaml::Controls::Page^>(element1))->KeyDown += ref new ::Windows::UI::Xaml::Input::KeyEventHandler(this, (void (::VBA10::DirectXPage::*)
                    (::Platform::Object^, ::Windows::UI::Xaml::Input::KeyRoutedEventArgs^))&DirectXPage::AppShell_KeyDown);
            }
            break;
        case 5:
            {
                this->swapChainPanel = safe_cast<::Windows::UI::Xaml::Controls::SwapChainPanel^>(__target);
            }
            break;
        case 6:
            {
                this->wideView = safe_cast<::Windows::UI::Xaml::VisualState^>(__target);
            }
            break;
        case 7:
            {
                this->mediumView = safe_cast<::Windows::UI::Xaml::VisualState^>(__target);
            }
            break;
        case 8:
            {
                this->narrowView = safe_cast<::Windows::UI::Xaml::VisualState^>(__target);
            }
            break;
        case 9:
            {
                this->RootSplitView = safe_cast<::Windows::UI::Xaml::Controls::SplitView^>(__target);
            }
            break;
        case 10:
            {
                this->TogglePaneButton = safe_cast<::Windows::UI::Xaml::Controls::Primitives::ToggleButton^>(__target);
                (safe_cast<::Windows::UI::Xaml::Controls::Primitives::ToggleButton^>(this->TogglePaneButton))->Unchecked += ref new ::Windows::UI::Xaml::RoutedEventHandler(this, (void (::VBA10::DirectXPage::*)
                    (::Platform::Object^, ::Windows::UI::Xaml::RoutedEventArgs^))&DirectXPage::TogglePaneButton_UnChecked);
                (safe_cast<::Windows::UI::Xaml::Controls::Primitives::ToggleButton^>(this->TogglePaneButton))->Checked += ref new ::Windows::UI::Xaml::RoutedEventHandler(this, (void (::VBA10::DirectXPage::*)
                    (::Platform::Object^, ::Windows::UI::Xaml::RoutedEventArgs^))&DirectXPage::TogglePaneButton_Checked);
            }
            break;
        case 11:
            {
                this->panelEditButton = safe_cast<::Windows::UI::Xaml::Controls::StackPanel^>(__target);
            }
            break;
        case 12:
            {
                this->notificationPanel = safe_cast<::Windows::UI::Xaml::Controls::StackPanel^>(__target);
            }
            break;
        case 13:
            {
                this->notificationEntrance = safe_cast<::Windows::UI::Xaml::Media::Animation::Storyboard^>(__target);
            }
            break;
        case 14:
            {
                this->notificationExit = safe_cast<::Windows::UI::Xaml::Media::Animation::Storyboard^>(__target);
            }
            break;
        case 15:
            {
                this->notificationEntranceExit = safe_cast<::Windows::UI::Xaml::Media::Animation::Storyboard^>(__target);
            }
            break;
        case 16:
            {
                this->txtNotification = safe_cast<::Windows::UI::Xaml::Controls::TextBlock^>(__target);
            }
            break;
        case 17:
            {
                this->CancelPositionBtn = safe_cast<::Windows::UI::Xaml::Controls::Button^>(__target);
                (safe_cast<::Windows::UI::Xaml::Controls::Button^>(this->CancelPositionBtn))->Click += ref new ::Windows::UI::Xaml::RoutedEventHandler(this, (void (::VBA10::DirectXPage::*)
                    (::Platform::Object^, ::Windows::UI::Xaml::RoutedEventArgs^))&DirectXPage::CancelPositionBtn_Click);
            }
            break;
        case 18:
            {
                this->AcceptPositionBtn = safe_cast<::Windows::UI::Xaml::Controls::Button^>(__target);
                (safe_cast<::Windows::UI::Xaml::Controls::Button^>(this->AcceptPositionBtn))->Click += ref new ::Windows::UI::Xaml::RoutedEventHandler(this, (void (::VBA10::DirectXPage::*)
                    (::Platform::Object^, ::Windows::UI::Xaml::RoutedEventArgs^))&DirectXPage::AcceptPositionBtn_Click);
            }
            break;
        case 19:
            {
                this->NavMenuList = safe_cast<::VBA10::Controls::NavMenuListView^>(__target);
                (safe_cast<::VBA10::Controls::NavMenuListView^>(this->NavMenuList))->ContainerContentChanging += ref new ::Windows::Foundation::TypedEventHandler<::Windows::UI::Xaml::Controls::ListViewBase^, ::Windows::UI::Xaml::Controls::ContainerContentChangingEventArgs^>(this, (void (::VBA10::DirectXPage::*)
                    (::Windows::UI::Xaml::Controls::ListViewBase^, ::Windows::UI::Xaml::Controls::ContainerContentChangingEventArgs^))&DirectXPage::NavMenuItemContainerContentChanging);
                (safe_cast<::VBA10::Controls::NavMenuListView^>(this->NavMenuList))->ItemInvoked += ref new ::Windows::Foundation::EventHandler<::Windows::UI::Xaml::Controls::ListViewItem^>(this, (void (::VBA10::DirectXPage::*)
                    (::Platform::Object^, ::Windows::UI::Xaml::Controls::ListViewItem^))&DirectXPage::NavMenuList_ItemInvoked);
            }
            break;
        case 20:
            {
                this->contentFrame = safe_cast<::Windows::UI::Xaml::Controls::Frame^>(__target);
            }
            break;
    }
    _contentLoaded = true;
}

::Windows::UI::Xaml::Markup::IComponentConnector^ ::VBA10::DirectXPage::GetBindingConnector(int __connectionId, ::Platform::Object^ __target)
{
    ::XamlBindingInfo::XamlBindings^ bindings = nullptr;
    switch (__connectionId)
    {
        case 2:
            {
                ::Windows::UI::Xaml::Controls::Grid^ element2 = safe_cast<::Windows::UI::Xaml::Controls::Grid^>(__target);
                DirectXPage_obj2_Bindings* objBindings = new DirectXPage_obj2_Bindings();
                objBindings->SetDataRoot(element2->DataContext);
                bindings = ref new ::XamlBindingInfo::XamlBindings(objBindings);
                bindings->SubscribeForDataContextChanged(element2);
                ::Windows::UI::Xaml::DataTemplate::SetExtensionInstance(element2, bindings);
            }
            break;
    }
    return bindings;
}


